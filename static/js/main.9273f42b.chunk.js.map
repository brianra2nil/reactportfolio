{"version":3,"sources":["pages/Home/assets/picofme.png","pages/Portfolio/assets/burger.png","pages/Portfolio/assets/codequiz.png","pages/Portfolio/assets/coview19.png","pages/Portfolio/assets/employeesummary.png","pages/Portfolio/assets/notetaker.png","pages/Portfolio/assets/pokemon.png","pages/Home/Home.js","pages/Portfolio/Portfolio.js","pages/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Row","xs","Col","Card","CardImg","className","top","width","src","picofme","alt","CardBody","CardTitle","CardSubtitle","CardText","ListGroup","ListGroupItem","Alert","color","Portfolio","burger","href","class","target","role","codequiz","coview19","employeesummary","notetaker","pokemon","Contact","Jumbotron","to","App","useState","isOpen","setIsOpen","toggle","Navbar","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","exact","path","component","NavbarText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9273f42b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picofme.09d945e4.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.7efa08e3.png\";","module.exports = __webpack_public_path__ + \"static/media/codequiz.2b80522d.png\";","module.exports = __webpack_public_path__ + \"static/media/coview19.5de6cc8a.png\";","module.exports = __webpack_public_path__ + \"static/media/employeesummary.fcc351c6.png\";","module.exports = __webpack_public_path__ + \"static/media/notetaker.06aed427.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.21ed7f75.png\";","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport picofme from \"./assets/picofme.png\"\r\nimport \"./home.css\"\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst Home = () => {\r\n// const Example = (props) => {\r\n  return (\r\n    <div>\r\n      \r\n      <br/>\r\n      <Row xs=\"3\">\r\n       <Col >\r\n      <Card >\r\n        <CardImg className=\"cardpic\" top width=\"100%\" src={picofme} alt=\"Profile Pic\" />\r\n        <CardBody>\r\n          <CardTitle>Brian Ratunil</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle>951-837-6791</CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle>brianra2nil@hotmail.com</CardSubtitle>\r\n          <hr/>\r\n          <CardText>Graduated in October 2020 from the UC Irvine coding bootcamp.  Looking for an opportunity to apply my newly found skills as a web developer.</CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      <Col >\r\n      <ListGroup>\r\n      <ListGroupItem className=\"heading\">Skillset</ListGroupItem>\r\n      <ListGroupItem>HTML/CSS</ListGroupItem>\r\n      <ListGroupItem>JavaScript / jQuery</ListGroupItem>\r\n      <ListGroupItem>SQL / NoSQL Databases (MySql and Mongo)</ListGroupItem>\r\n      <ListGroupItem>Node.js / Express</ListGroupItem>\r\n      <ListGroupItem>React.js</ListGroupItem>\r\n      <ListGroupItem>Deployment</ListGroupItem>\r\n    </ListGroup>\r\n      </Col>\r\n      <Col >\r\n      <ListGroup>\r\n      <ListGroupItem className=\"heading\">Hobbies</ListGroupItem>\r\n      <ListGroupItem>Building and Customizing Desktop PCs</ListGroupItem>\r\n      <ListGroupItem>Biking and Hiking</ListGroupItem>\r\n      <ListGroupItem>Basketball and the NBA</ListGroupItem>\r\n      <ListGroupItem>Creating apps that help automate our lives</ListGroupItem>\r\n      <ListGroupItem>Video games and sci-fi/action movies</ListGroupItem>\r\n      <ListGroupItem>Mining cryptocurrency like Bitcoin and Ethereum</ListGroupItem>\r\n    </ListGroup>\r\n      </Col>\r\n      </Row>\r\n      <br/>\r\n      <Alert color=\"dark\">\r\n        I previously worked in the freight and logistics industry for over 15 years starting out as a truck driver and working my way up through promotions such as a Dock Supervisor, Dispatcher and Freight Operations Manager.  <br/>\r\n        I was part of a deployment team when the company decided to use mobile handhelds that employees can use in the field and connect with the network and office staff.  I was asked to test, and deploy the software. <br/>\r\n        I have always had an interest in computer software and hardware.  I enjoy creating applications that people can use to either have fun and/or help improve their lives easier through automation. <br/>\r\n        I feel a great sense of accomplishment creating and designing something from scratch, that people can use anywhere they have a network connection.\r\n        <br/>\r\n        <br/>\r\n      To learn more about me click on the links below for my Resume, Github, LinkedIn and email.\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Example;\r\nexport default Home;","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport burger from \"./assets/burger.png\"\r\nimport codequiz from \"./assets/codequiz.png\"\r\nimport coview19 from \"./assets/coview19.png\"\r\nimport employeesummary from \"./assets/employeesummary.png\"\r\nimport notetaker from \"./assets/notetaker.png\"\r\nimport pokemon from \"./assets/pokemon.png\"\r\n\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <>\r\n    <h1>A short list of some of my projects</h1>\r\n    <Row xs=\"3\">\r\n       <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={burger} alt=\"burgerapp\" />\r\n        <CardBody>\r\n          <CardTitle>Burger App</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle><p>Link to <a href=\"https://github.com/brianra2nil/burger\">Github URL</a></p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://whispering-retreat-82332.herokuapp.com/\" target=\"_blank\" role=\"button\">Deployed Site</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText>If you love burgers, you can list all the burgers you want to try on this app and then click on Devour it! to keep a list of burgers you tried.  Use of MySQL databases to get, put, post and delete entries into the database and render into the frontend.  Also deployed on Heroku.</CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={codequiz} alt=\"codequiz\" />\r\n        <CardBody>\r\n          <CardTitle>Code Quiz</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle><p>Link to <a href=\"https://github.com/brianra2nil/codequiz2\">Github URL</a>.</p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://brianra2nil.github.io/codequiz2/\" target=\"_blank\" role=\"button\">Deployed site</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText>When users start the quiz, their score is recorded and displayed.  There is a timer that will bring you back to the start if time runs out.  Users lose points for incorrect answers.  Top score and username is recorded through local storage.</CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={coview19} alt=\"coview19\" />\r\n        <CardBody>\r\n          <CardTitle>Coview19</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle> <p>Link to <a href=\"https://github.com/mattjavier/coview-19\">Github URL</a></p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://sleepy-forest-03534.herokuapp.com/\" target=\"_blank\" role=\"button\">Deployed site</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText><p>Users can view and enter reviews for businesses and rate them based on their adherance to mask use, social distancing and sanitation with a 5 star rating system.</p>\r\n        <p>Collaborators: Matthew Javier, Danielle Hillman, Pat Downer.  Use of MySql Database and sequalize to allow users to enter a review of a business with name, location, type and a star rating system. Users can also view all other reviews and search by category.</p></CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      </Row>\r\n<br></br>\r\n      <Row xs=\"3\">\r\n       <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={employeesummary} alt=\"employeesummary\" />\r\n        <CardBody>\r\n          <CardTitle>Employee Summary</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle><p>Link to <a href=\"https://github.com/brianra2nil/employeesummary\">Github URL</a></p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://drive.google.com/file/d/1DgVWX5phd9eE-12su9Lj-BvVGqQP5hNP/view\" target=\"_blank\" role=\"button\">Video Demonstration</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText>This app allows the user to use the CLI to enter data about their employees in different roles. Once the data is entered, the app will render a clean looking data card for each employee with name, id, email and a variance of (depending on role) office number, GitHub Username, and school attended.</CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={notetaker} alt=\"notetaker\" />\r\n        <CardBody>\r\n          <CardTitle>Note Taker</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle><p>Link to <a href=\"https://github.com/brianra2nil/notetaker\">Github URL</a>.</p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://stormy-peak-85156.herokuapp.com/\" target=\"_blank\" role=\"button\">Deployed site</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText>This notetaker app allows you to write and save notes and also delete them. When you leave the website it will be the same as when you last made changes.</CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      <Col >\r\n      <Card >\r\n        <CardImg className=\"img-fluid\" top width=\"100%\" src={pokemon} alt=\"pokemon\" />\r\n        <CardBody>\r\n          <CardTitle>Pokemon App</CardTitle>\r\n          <hr/>\r\n          <CardSubtitle> <p>Link to <a href=\"https://github.com/Kalynbsimms/pokeProject\">Github URL</a></p></CardSubtitle>\r\n          <hr/>\r\n          <CardSubtitle><a class=\"btn btn-primary btn-sm\" href=\"https://kalynbsimms.github.io/pokeProject/\" target=\"_blank\" role=\"button\">Deployed site</a></CardSubtitle>\r\n          <hr/>\r\n          <CardText><p>Data, cards, and trivia information pulled from API</p>\r\n            <p>Collaborators:  Kalyn Simms, David Trimboli, Pat Downer, Devin Castro.  Use of API to pull Pokemon data, and first collaborative work with a gitmaster to merge repositories.</p></CardText>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </Col>\r\n\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Portfolio\r\n","import React from 'react'\r\nimport { Jumbotron, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n    <Jumbotron>\r\n      <h1 className=\"display-3\">Contact Info</h1>\r\n      <p className=\"lead\">Brian Ratunil, Phone:  951-837-6791</p>\r\n      <hr className=\"my-2\" />\r\n      <p>You may reach me via phone or email</p>\r\n      <p className=\"lead\"></p>\r\n      \r\n      <Link to=\"mailto:brianra2nil@hotmail.com\" > Email Me </Link> \r\n    \r\n    </Jumbotron>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Portfolio from './pages/Portfolio'\nimport Contact from './pages/Contact'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport \"./app.css\"\n\n\n\n\nconst App = () => {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand>Brian Ratunil</NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"mr-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"/\">Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/portfolio\">Portfolio</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/contact\">Contact</NavLink>\n                </NavItem>\n\n              </Nav>\n\n            </Collapse>\n          </Navbar>\n        </nav>\n\n\n        <Switch>\n          <Route exact path=\"/reactportfolio\" component={Home} />\n          <Route path=\"/reactportfolio/portfolio\" component={Portfolio} />\n          <Route path=\"/reactportfolio/contact\" component={Contact} />\n        </Switch>\n\n\n      </div>\n      <div className=\"fixed-bottom\">\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand >Brian Ratunil</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink target=\"_blank\"\n                  href=\"https://drive.google.com/file/d/1n2uYdPr-E6yxJLkdQUHKezOL0GprNJzN/view?usp=sharing2\">My Resume</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target=\"_blank\" href=\"https://github.com/brianra2nil\">GitHub</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target=\"_blank\" href=\"https://www.linkedin.com/in/brian-ratunil-0738b9102\">LinkedIn</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target=\"_blank\" href=\"mailto:brianra2nil@hotmail.com\">Email Me</NavLink>\n              </NavItem>\n\n\n            </Nav>\n            <NavbarText>&#169; 2020 - Brian Ratunil</NavbarText>\n          </Collapse>\n        </Navbar>\n      </div>\n\n    </Router>\n\n  )\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}